@Dependency(lowercased: "honkDevice")
protocol HONKDevice {
    func honk(times: Int)

    func hooooooonk()

    // And more...

    // Generated by the @Dependency macro

    typealias Dependency = HONKDeviceDependency

    typealias DependencyKey = HONKDeviceDependencyKey
}

// Generated by the @Dependency macro

protocol HONKDeviceDependency: Dependencies {
    var honkDevice: any HONKDevice { get }
}

struct HONKDeviceDependencyKey: DependencyKey {
    static let defaultValue: any HONKDevice = DefaultHONKDeviceValueFactory.makeDefaultValue()
}

// Default Dependency Value Factory

private struct DefaultHONKDeviceValueFactory: DefaultDependencyValueFactory {
    static func makeDefaultValue() -> any HONKDevice {
        // Let's pretend we got this type defined somewhereâ€¦
        AirHONKDevice()
    }
}
