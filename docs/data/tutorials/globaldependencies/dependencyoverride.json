{"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"One of the most important reasons to use dependency injection is to make your software components testable by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"taking control of the dependencies’ side effects during testing. Any dependencies you manage through"},{"text":" ","type":"text"},{"type":"text","text":"GlobalDependencies are simple to override during tests with the provided API."}]},{"inlineContent":[{"type":"text","text":"It is also possible to use these techniques in real-world logic but it’s not generally recommended. When"},{"text":" ","type":"text"},{"type":"text","text":"possible encapsulate any logic that may swap the value of an app’s dependency depending on the environment where"},{"type":"text","text":" "},{"text":"the app is being run inside its ","type":"text"},{"code":"DefaultDependencyValueProvider","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"chapter":"Overriding Dependencies","kind":"hero","estimatedTimeInMinutes":10,"title":"Overriding Dependencies"},{"kind":"tasks","tasks":[{"title":"Set up a Mock Dependency Implementation","stepsSection":[{"media":null,"code":"DependencyOverride-1-1-MockClownManager.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For the examples in this tutorial we’ll be declaring a "},{"type":"codeVoice","code":"MockClownManager"},{"type":"text","text":" type that replaces the whole"},{"text":" ","type":"text"},{"type":"text","text":"API with configurable blocks and fails if any are called without being configured."}]}],"type":"step"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Before you mock a dependency you need a mock type. What exactly you use as such is out of the scope of"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"GlobalDependencies"},{"text":" package, we’re offering one here for sample purposes but there is no obligation to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"follow the practices used for it."}],"type":"paragraph"}]}],"anchor":"Set-up-a-Mock-Dependency-Implementation"},{"title":"Build a `GlobalDependencies` Value With Your Overrides","stepsSection":[{"caption":[],"media":null,"type":"step","code":"DependencyOverride-2-1-SingleOverride.swift","content":[{"inlineContent":[{"type":"text","text":"For a single dependency override it’s easiest to use "},{"type":"codeVoice","code":"GlobalDependencies.with(override:for:)"},{"type":"text","text":". In this"},{"type":"text","text":" "},{"text":"example we’re setting up an override of the ","type":"text"},{"code":"ClownManager","type":"codeVoice"},{"type":"text","text":" in a test."}],"type":"paragraph"}],"runtimePreview":null},{"runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"For multiple overrides it’s better to just use Swift’s value type semantics to build up a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GlobalDependencies"},{"text":" value with all the overrides you need.","type":"text"}],"type":"paragraph"}],"media":null,"code":"DependencyOverride-2-2-MultipleOverride.swift"}],"anchor":"Build-a-GlobalDependencies-Value-With-Your-Overrides","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"With a mock in place, all you’ll need to apply it is to generate a new value of ","type":"text"},{"code":"GlobalDependencies","type":"codeVoice"},{"text":" that","type":"text"},{"text":" ","type":"text"},{"text":"overrides the dependency with your mock and inject it into the component through initialization.","type":"text"}]}]}]}]}],"kind":"project","hierarchy":{"reference":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies","modules":[{"reference":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Setting-up-a-Dependency","projects":[{"sections":[{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Before-You-Begin","kind":"task"},{"kind":"task","reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Implement-the-default-dependency-value-factory"},{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Attach-the-Dependency-macro-to-the-API-protocol","kind":"task"},{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Potatoes","kind":"task"}],"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup"}]},{"reference":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Injecting-Dependencies","projects":[{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection","sections":[{"kind":"task","reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Attach-the-InjectedDependencies-Macro-to-Your-Component"},{"kind":"task","reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Adjust-Access-Control-of-Your-Dependencies-If-Needed"},{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Inject-your-dependencies-on-initialization","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride#Set-up-a-Mock-Dependency-Implementation","kind":"task"},{"kind":"task","reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride#Build-a-GlobalDependencies-Value-With-Your-Overrides"}],"reference":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride"}],"reference":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Overriding-Dependencies"}],"paths":[["doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies","doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/$volume","doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Overriding-Dependencies"],["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/globaldependencies\/dependencyoverride"]}],"metadata":{"title":"Overriding Dependencies","category":"Using GlobalDependencies","categoryPathComponent":"Using-GlobalDependencies","role":"project"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride"},"references":{"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection#Adjust-Access-Control-of-Your-Dependencies-If-Needed":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Adjust-Access-Control-of-Your-Dependencies-If-Needed","url":"\/tutorials\/globaldependencies\/dependencyinjection#Adjust-Access-Control-of-Your-Dependencies-If-Needed","title":"Adjust Access Control of Your Dependencies If Needed","kind":"section","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"type":"text","text":" "},{"type":"text","text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well"},{"type":"text","text":" "},{"text":"managed and well understood.","type":"text"}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection#Attach-the-InjectedDependencies-Macro-to-Your-Component":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Attach-the-InjectedDependencies-Macro-to-Your-Component","url":"\/tutorials\/globaldependencies\/dependencyinjection#Attach-the-InjectedDependencies-Macro-to-Your-Component","kind":"section","title":"Attach the InjectedDependencies Macro to Your Component","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"type":"text","text":" "},{"type":"text","text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well"},{"type":"text","text":" "},{"text":"managed and well understood.","type":"text"}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup#Implement-the-default-dependency-value-factory":{"kind":"section","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Implement-the-default-dependency-value-factory","url":"\/tutorials\/globaldependencies\/dependencysetup#Implement-the-default-dependency-value-factory","title":"Implement the default dependency value factory","role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/Using-GlobalDependencies":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies","url":"\/tutorials\/using-globaldependencies","kind":"overview","title":"Using GlobalDependencies","abstract":[{"type":"text","text":"The GlobalDependencies package helps abstract away global dependencies, inject them into components and"},{"text":" ","type":"text"},{"text":"override them for test mocking purposes. The following tutorials detail how to perform each of those tasks.","type":"text"}],"role":"overview","type":"topic"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup#Potatoes":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Potatoes","url":"\/tutorials\/globaldependencies\/dependencysetup#Potatoes","kind":"section","title":"Potatoes!","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyOverride":{"role":"project","kind":"project","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride","estimatedTime":"10min","url":"\/tutorials\/globaldependencies\/dependencyoverride","abstract":[{"type":"text","text":"One of the most important reasons to use dependency injection is to make your software components testable by"},{"text":" ","type":"text"},{"type":"text","text":"taking control of the dependencies’ side effects during testing. Any dependencies you manage through"},{"type":"text","text":" "},{"text":"GlobalDependencies are simple to override during tests with the provided API.","type":"text"}],"title":"Overriding Dependencies","type":"topic"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyOverride#Set-up-a-Mock-Dependency-Implementation":{"kind":"section","abstract":[{"type":"text","text":"One of the most important reasons to use dependency injection is to make your software components testable by"},{"type":"text","text":" "},{"type":"text","text":"taking control of the dependencies’ side effects during testing. Any dependencies you manage through"},{"type":"text","text":" "},{"text":"GlobalDependencies are simple to override during tests with the provided API.","type":"text"}],"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride#Set-up-a-Mock-Dependency-Implementation","title":"Set up a Mock Dependency Implementation","url":"\/tutorials\/globaldependencies\/dependencyoverride#Set-up-a-Mock-Dependency-Implementation","role":"pseudoSymbol","type":"section"},"DependencyOverride-1-1-MockClownManager.swift":{"content":["@testable import ClownManagerDependency","import XCTest","","struct MockClownManager: ClownManager {","    var honkOverride: (() -> Void)?","","    func honk() {","        if let honkOverride {","            honkOverride()","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var slapOverride: ((Person) -> Void)?","","    func slap(victim _: Person) {","        if let slapOverride {","            slapOverride(person)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var pieToFaceOverride: ((Pie, Person) -> Void)?","","    func pieToFace(pie: Pie, victim: Person) {","        if let pieToFaceOverride {","            pieToFaceOverride(pie, victim)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var shoeSizeGetterOverride: (() -> Double)?","","    var shoeSizeSetterOverride: ((Double) -> Void)?","","    var shoeSize: Double {","        get {","            if let shoeSizeGetterOverride {","                shoeSizeGetterOverride()","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","                return 0.0","            }","        }","","        set {","            if let shoeSizeSetterOverride {","                shoeSizeGetterOverride(newValue)","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","            }","        }","    }","}"],"syntax":"swift","type":"file","identifier":"DependencyOverride-1-1-MockClownManager.swift","fileType":"swift","highlights":[],"fileName":"BirthdayPartyTests.swift"},"doc://GlobalDependencies/tutorials/Using-GlobalDependencies/Setting-up-a-Dependency":{"role":"article","abstract":[],"type":"topic","kind":"article","url":"\/tutorials\/using-globaldependencies\/setting-up-a-dependency","title":"Setting up a Dependency","identifier":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Setting-up-a-Dependency"},"doc://GlobalDependencies/tutorials/Using-GlobalDependencies/Overriding-Dependencies":{"role":"article","abstract":[],"kind":"article","type":"topic","url":"\/tutorials\/using-globaldependencies\/overriding-dependencies","title":"Overriding Dependencies","identifier":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Overriding-Dependencies"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup#Attach-the-Dependency-macro-to-the-API-protocol":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Attach-the-Dependency-macro-to-the-API-protocol","url":"\/tutorials\/globaldependencies\/dependencysetup#Attach-the-Dependency-macro-to-the-API-protocol","kind":"section","title":"Attach the @Dependency macro to the API protocol","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup":{"kind":"project","url":"\/tutorials\/globaldependencies\/dependencysetup","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"code":"GlobalDependencies","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","estimatedTime":"15min","title":"Setting up a Global Dependency","type":"topic","role":"project"},"DependencyOverride-2-2-MultipleOverride.swift":{"content":["import XCTest","","class BirthdayPartyTests: XCTestCase {","    func testClownIntroSlapsCelebrant() {","        var mockClownManager = MockClownManager()","        let slapExpectation = expectation(\"Clown slaps\")","        mockClownManager.slapOverride = {","            slapExpectation.fulfill()","        }","        let mockDependencies = GlobalDependencies.default.with(","            override: mockClownManager,","            for: ClownManager.DependencyKey","        )","","        let birthdayParty = BirthdayParty(celebrated: .mock, date: .mock, dependencies: mockDependencies)","        birthdayParty.introduceClown()","","        wait(for: [slapExpectation])","    }","","    func testClownIntroHonksAndSlaps() {","        var mockClownManager = MockClownManager()","        let slapExpectation = expectation(\"Clown slaps\")","        mockClownManager.slapOverride = {","            slapExpectation.fulfill()","        }","","        var mockHONKDevice = MockHONKDevice()","        let honkExpectation = expectation(\"HONK\")","        mockHONKDevice.honkOverride = { times in","            XCTAssertEqual(times, 1)","            honkExpectation.fulfill()","        }","","        var mockDependencies = GlobalDependencies.default","        mockDependencies.override(key: ClownManager.DependencyKey, with: mockClownManager)","        mockDependencies.override(key: HONKDevice.DependencyKey, with: mockHONKDevice)","","        let birthdayParty = BirthdayParty(celebrated: .mock, date: .mock, dependencies: mockDependencies)","        birthdayParty.introduceClown()","","        wait(for: [slapExpectation, honkExpectation])","    }","","    \/\/ Assume there's more stuff in this class...","}","","struct MockHONKDevice: HONKDevice {","    var honkOverride: ((Int) -> Void)?","","    func honk(times: Int) {","        if let honkOverride {","            honkOverride(times)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var hooooooonkOverride: (() -> Void)?","","    func hooooooonk() {","        if let hooooooonkOverride {","            hooooooonkOverride()","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","}","","struct MockClownManager: ClownManager {","    var honkOverride: (() -> Void)?","","    func honk() {","        if let honkOverride {","            honkOverride()","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var slapOverride: ((Person) -> Void)?","","    func slap(victim _: Person) {","        if let slapOverride {","            slapOverride(person)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var pieToFaceOverride: ((Pie, Person) -> Void)?","","    func pieToFace(pie: Pie, victim: Person) {","        if let pieToFaceOverride {","            pieToFaceOverride(pie, victim)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var shoeSizeGetterOverride: (() -> Double)?","","    var shoeSizeSetterOverride: ((Double) -> Void)?","","    var shoeSize: Double {","        get {","            if let shoeSizeGetterOverride {","                shoeSizeGetterOverride()","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","                return 0.0","            }","        }","","        set {","            if let shoeSizeSetterOverride {","                shoeSizeGetterOverride(newValue)","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","            }","        }","    }","}"],"fileType":"swift","identifier":"DependencyOverride-2-2-MultipleOverride.swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69}],"fileName":"BirthdayPartyTests.swift","syntax":"swift","type":"file"},"DependencyOverride-2-1-SingleOverride.swift":{"content":["import XCTest","","class BirthdayPartyTests: XCTestCase {","    func testClownIntroSlapsCelebrant() {","        var mockClownManager = MockClownManager()","        let slapExpectation = expectation(\"Clown slaps\")","        mockClownManager.slapOverride = {","            slapExpectation.fulfill()","        }","        let mockDependencies = GlobalDependencies.default.with(","            override: mockClownManager,","            for: ClownManager.DependencyKey","        )","","        let birthdayParty = BirthdayParty(celebrated: .mock, date: .mock, dependencies: mockDependencies)","        birthdayParty.introduceClown()","","        wait(for: [slapExpectation])","    }","","    \/\/ Assume there's more stuff in this class...","}","","struct MockClownManager: ClownManager {","    var honkOverride: (() -> Void)?","","    func honk() {","        if let honkOverride {","            honkOverride()","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var slapOverride: ((Person) -> Void)?","","    func slap(victim _: Person) {","        if let slapOverride {","            slapOverride(person)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var pieToFaceOverride: ((Pie, Person) -> Void)?","","    func pieToFace(pie: Pie, victim: Person) {","        if let pieToFaceOverride {","            pieToFaceOverride(pie, victim)","        } else {","            XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","        }","    }","","    var shoeSizeGetterOverride: (() -> Double)?","","    var shoeSizeSetterOverride: ((Double) -> Void)?","","    var shoeSize: Double {","        get {","            if let shoeSizeGetterOverride {","                shoeSizeGetterOverride()","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","                return 0.0","            }","        }","","        set {","            if let shoeSizeSetterOverride {","                shoeSizeGetterOverride(newValue)","            } else {","                XCTFail(\"mock \\(#function) at \\(#file) called with no override set\")","            }","        }","    }","}"],"syntax":"swift","type":"file","identifier":"DependencyOverride-2-1-SingleOverride.swift","fileType":"swift","highlights":[],"fileName":"BirthdayPartyTests.swift"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection#Inject-your-dependencies-on-initialization":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"type":"text","text":" "},{"type":"text","text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well"},{"type":"text","text":" "},{"text":"managed and well understood.","type":"text"}],"kind":"section","type":"section","url":"\/tutorials\/globaldependencies\/dependencyinjection#Inject-your-dependencies-on-initialization","title":"Inject your dependencies on initialization","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection#Inject-your-dependencies-on-initialization"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup#Before-You-Begin":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup#Before-You-Begin","url":"\/tutorials\/globaldependencies\/dependencysetup#Before-You-Begin","kind":"section","title":"Before You Begin","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/Using-GlobalDependencies/Injecting-Dependencies":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/Using-GlobalDependencies\/Injecting-Dependencies","url":"\/tutorials\/using-globaldependencies\/injecting-dependencies","kind":"article","title":"Injecting Dependencies","abstract":[],"role":"article","type":"topic"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyOverride#Build-a-GlobalDependencies-Value-With-Your-Overrides":{"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyOverride#Build-a-GlobalDependencies-Value-With-Your-Overrides","url":"\/tutorials\/globaldependencies\/dependencyoverride#Build-a-GlobalDependencies-Value-With-Your-Overrides","title":"Build a `GlobalDependencies` Value With Your Overrides","kind":"section","abstract":[{"type":"text","text":"One of the most important reasons to use dependency injection is to make your software components testable by"},{"type":"text","text":" "},{"type":"text","text":"taking control of the dependencies’ side effects during testing. Any dependencies you manage through"},{"type":"text","text":" "},{"text":"GlobalDependencies are simple to override during tests with the provided API.","type":"text"}],"role":"pseudoSymbol","type":"section"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection":{"kind":"project","title":"Injecting Dependencies","url":"\/tutorials\/globaldependencies\/dependencyinjection","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection","role":"project","estimatedTime":"10min","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"text":" ","type":"text"},{"text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"managed and well understood."}],"type":"topic"}}}