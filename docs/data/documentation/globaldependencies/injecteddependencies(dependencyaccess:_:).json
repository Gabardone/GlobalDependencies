{"variants":[{"paths":["\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(Dependencies), named(dependencies)) ","kind":"text"},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"InjectedDependencies","kind":"identifier"},{"text":"<each ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18GlobalDependencies13AccessControlO","text":"AccessControl","kind":"typeIdentifier","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl"},{"text":" = .private, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": repeat (each "},{"kind":"typeIdentifier","text":"U"},{"text":").Type)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The macro will declare a ","type":"text"},{"code":"Dependencies","type":"codeVoice"},{"text":" type matching the dependencies for all the given protocols and a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"let dependencies: Dependencies"},{"text":" stored property to hold onto them. Its access control can be tweaked if needed but","type":"text"},{"type":"text","text":" "},{"text":"if possible it’s best to leave the default ","type":"text"},{"type":"codeVoice","code":"private"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"Initialization being individual to each type means the logic for injecting the dependencies will need to be added to"},{"text":" ","type":"text"},{"type":"text","text":"any initializers that the type has manually, usually by adding a final parameter of the form"},{"type":"text","text":" "},{"type":"codeVoice","code":"dependencies: Dependencies = GlobalDependencies.default"},{"type":"text","text":"."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"dependencyAccess: Access control for the generated ","type":"text"},{"code":"dependencies","type":"codeVoice"},{"type":"text","text":" stored property. Defaults to "},{"type":"codeVoice","code":".private"},{"text":". This","type":"text"},{"type":"text","text":" "},{"text":"being a macro you should always use a constant whenever you use the parameter or the macro won’t be able to generate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"valid code."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"_: A comma-separated list of dependency protocols. These should be the protocols that have "},{"type":"codeVoice","code":"@Dependency"},{"type":"text","text":" "},{"type":"text","text":"attached to their declaration, not their generated "},{"code":".Dependency","type":"codeVoice"},{"type":"text","text":" protocols"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"type":"text","text":"A macro that declares the dependencies of the attached type and sets it up for their injection."}],"seeAlsoSections":[{"title":"Injecting Dependencies into Components","generated":true,"identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection"]}],"sections":[],"metadata":{"title":"InjectedDependencies(dependencyAccess:_:)","roleHeading":"Macro","symbolKind":"macro","role":"symbol","modules":[{"name":"GlobalDependencies"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"InjectedDependencies","kind":"identifier"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dependencyAccess"},{"kind":"text","text":": "},{"preciseIdentifier":"s:18GlobalDependencies13AccessControlO","text":"AccessControl","kind":"typeIdentifier"},{"text":", repeat (each ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":").Type)","kind":"text"}],"externalID":"s:18GlobalDependencies08InjectedB016dependencyAccess_yAA0E7ControlO_xmxQptcRvzlufm"},"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"identifier":{"url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://GlobalDependencies/documentation/GlobalDependencies/InjectedDependencies(dependencyAccess:_:)":{"url":"\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedDependencies"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AccessControl","preciseIdentifier":"s:18GlobalDependencies13AccessControlO"},{"text":", repeat (each ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":").Type)","kind":"text"}],"type":"topic","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)","kind":"symbol","title":"InjectedDependencies(dependencyAccess:_:)","abstract":[{"text":"A macro that declares the dependencies of the attached type and sets it up for their injection.","type":"text"}],"role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/AccessControl":{"url":"\/documentation\/globaldependencies\/accesscontrol","abstract":[{"type":"text","text":"Enumerates Swift access control options as to use as a parameter for a code generating macro."}],"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl","title":"AccessControl","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AccessControl"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AccessControl"}],"type":"topic"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection":{"estimatedTime":"10min","url":"\/tutorials\/globaldependencies\/dependencyinjection","type":"topic","kind":"project","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection","title":"Injecting Dependencies","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"text":" ","type":"text"},{"text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well","type":"text"},{"type":"text","text":" "},{"text":"managed and well understood.","type":"text"}],"role":"project"},"doc://GlobalDependencies/documentation/GlobalDependencies":{"role":"collection","title":"GlobalDependencies","url":"\/documentation\/globaldependencies","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","kind":"symbol","type":"topic","abstract":[]}}}