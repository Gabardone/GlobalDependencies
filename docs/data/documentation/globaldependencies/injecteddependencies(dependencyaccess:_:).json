{"seeAlsoSections":[{"identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection"],"title":"Injecting Dependencies into Components","generated":true}],"sections":[],"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)"]}],"metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedDependencies","kind":"identifier"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18GlobalDependencies13AccessControlO","kind":"typeIdentifier","text":"AccessControl"},{"text":", repeat (each ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"kind":"text","text":").Type)"}],"modules":[{"name":"GlobalDependencies"}],"role":"symbol","roleHeading":"Macro","externalID":"s:18GlobalDependencies08InjectedB016dependencyAccess_yAA0E7ControlO_xmxQptcRvzlufm","title":"InjectedDependencies(dependencyAccess:_:)","symbolKind":"macro"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: named(Dependencies), named(dependencies)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedDependencies"},{"text":"<each ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dependencyAccess"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18GlobalDependencies13AccessControlO","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl","text":"AccessControl"},{"text":" = .private, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":": repeat (each "},{"kind":"typeIdentifier","text":"U"},{"text":").Type)","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"The macro will declare a "},{"type":"codeVoice","code":"Dependencies"},{"type":"text","text":" type matching the dependencies for all the given protocols and a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"let dependencies: Dependencies"},{"type":"text","text":" stored property to hold onto them. Its access control can be tweaked if needed but"},{"type":"text","text":" "},{"type":"text","text":"if possible it’s best to leave the default "},{"code":"private","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Initialization being individual to each type means the logic for injecting the dependencies will need to be added to"},{"type":"text","text":" "},{"text":"any initializers that the type has manually, usually by adding a final parameter of the form","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"dependencies: Dependencies = GlobalDependencies.default"},{"text":".","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"dependencyAccess: Access control for the generated ","type":"text"},{"type":"codeVoice","code":"dependencies"},{"type":"text","text":" stored property. Defaults to "},{"type":"codeVoice","code":".private"},{"type":"text","text":". This"},{"text":" ","type":"text"},{"type":"text","text":"being a macro you should always use a constant whenever you use the parameter or the macro won’t be able to generate"},{"text":" ","type":"text"},{"type":"text","text":"valid code."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"_: A comma-separated list of dependency protocols. These should be the protocols that have "},{"type":"codeVoice","code":"@Dependency"},{"type":"text","text":" "},{"type":"text","text":"attached to their declaration, not their generated "},{"type":"codeVoice","code":".Dependency"},{"type":"text","text":" protocols"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)"},"abstract":[{"text":"A macro that declares the dependencies of the attached type and sets it up for their injection.","type":"text"}],"references":{"doc://GlobalDependencies/documentation/GlobalDependencies/AccessControl":{"navigatorTitle":[{"text":"AccessControl","kind":"identifier"}],"title":"AccessControl","abstract":[{"type":"text","text":"Enumerates Swift access control options as to use as a parameter for a code generating macro."}],"url":"\/documentation\/globaldependencies\/accesscontrol","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessControl"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl"},"doc://GlobalDependencies/documentation/GlobalDependencies/InjectedDependencies(dependencyAccess:_:)":{"kind":"symbol","url":"\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)","abstract":[{"type":"text","text":"A macro that declares the dependencies of the attached type and sets it up for their injection."}],"type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedDependencies","kind":"identifier"},{"kind":"text","text":"<each "},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dependencyAccess"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AccessControl","preciseIdentifier":"s:18GlobalDependencies13AccessControlO"},{"kind":"text","text":", repeat (each "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":").Type)"}],"role":"symbol","title":"InjectedDependencies(dependencyAccess:_:)","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)"},"doc://GlobalDependencies/documentation/GlobalDependencies":{"url":"\/documentation\/globaldependencies","type":"topic","abstract":[],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","kind":"symbol","title":"GlobalDependencies","role":"collection"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection":{"kind":"project","url":"\/tutorials\/globaldependencies\/dependencyinjection","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"type":"text","text":" "},{"type":"text","text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well"},{"type":"text","text":" "},{"type":"text","text":"managed and well understood."}],"type":"topic","role":"project","estimatedTime":"10min","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection","title":"Injecting Dependencies"}}}