{"metadata":{"symbolKind":"macro","modules":[{"name":"GlobalDependencies"}],"title":"InjectedDependencies(dependencyAccess:_:)","role":"symbol","externalID":"s:18GlobalDependencies08InjectedB016dependencyAccess_yAA0E7ControlO_xmxQptcRvzlufm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InjectedDependencies"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dependencyAccess"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18GlobalDependencies13AccessControlO","text":"AccessControl","kind":"typeIdentifier"},{"text":", repeat (each ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":").Type)","kind":"text"}],"roleHeading":"Macro"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(Dependencies), named(dependencies)) "},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedDependencies","kind":"identifier"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl","kind":"typeIdentifier","text":"AccessControl","preciseIdentifier":"s:18GlobalDependencies13AccessControlO"},{"kind":"text","text":" = .private, "},{"text":"_","kind":"externalParam"},{"text":": repeat (each ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":").Type)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The macro will declare a ","type":"text"},{"type":"codeVoice","code":"Dependencies"},{"type":"text","text":" type matching the dependencies for all the given protocols and a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"let dependencies: Dependencies"},{"type":"text","text":" stored property to hold onto them. Its access control can be tweaked if needed but"},{"type":"text","text":" "},{"type":"text","text":"if possible it’s best to leave the default "},{"type":"codeVoice","code":"private"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Initialization being individual to each type means the logic for injecting the dependencies will need to be added to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any initializers that the type has manually, usually by adding a final parameter of the form"},{"text":" ","type":"text"},{"type":"codeVoice","code":"dependencies: Dependencies = GlobalDependencies.default"},{"type":"text","text":"."}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"dependencyAccess: Access control for the generated "},{"code":"dependencies","type":"codeVoice"},{"text":" stored property. Defaults to ","type":"text"},{"code":".private","type":"codeVoice"},{"type":"text","text":". This"},{"text":" ","type":"text"},{"text":"being a macro you should always use a constant whenever you use the parameter or the macro won’t be able to generate","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"valid code."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"_: A comma-separated list of dependency protocols. These should be the protocols that have "},{"code":"@Dependency","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"attached to their declaration, not their generated "},{"code":".Dependency","type":"codeVoice"},{"type":"text","text":" protocols"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"seeAlsoSections":[{"title":"Injecting Dependencies into Components","identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection"],"generated":true}],"abstract":[{"type":"text","text":"A macro that declares the dependencies of the attached type and sets it up for their injection."}],"sections":[],"references":{"doc://GlobalDependencies/documentation/GlobalDependencies/AccessControl":{"navigatorTitle":[{"text":"AccessControl","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AccessControl","kind":"identifier"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl","url":"\/documentation\/globaldependencies\/accesscontrol","title":"AccessControl","kind":"symbol","abstract":[{"text":"Enumerates Swift access control options as to use as a parameter for a code generating macro.","type":"text"}]},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection":{"role":"project","kind":"project","url":"\/tutorials\/globaldependencies\/dependencyinjection","type":"topic","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"text":" ","type":"text"},{"text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well","type":"text"},{"text":" ","type":"text"},{"text":"managed and well understood.","type":"text"}],"title":"Injecting Dependencies","estimatedTime":"10min","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection"},"doc://GlobalDependencies/documentation/GlobalDependencies/InjectedDependencies(dependencyAccess:_:)":{"role":"symbol","url":"\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)","type":"topic","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)","abstract":[{"type":"text","text":"A macro that declares the dependencies of the attached type and sets it up for their injection."}],"title":"InjectedDependencies(dependencyAccess:_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedDependencies","kind":"identifier"},{"text":"<each ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AccessControl","kind":"typeIdentifier","preciseIdentifier":"s:18GlobalDependencies13AccessControlO"},{"kind":"text","text":", repeat (each "},{"kind":"typeIdentifier","text":"U"},{"text":").Type)","kind":"text"}],"kind":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies":{"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","type":"topic","role":"collection","abstract":[],"title":"GlobalDependencies","url":"\/documentation\/globaldependencies"}}}