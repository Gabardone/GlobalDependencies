{"metadata":{"title":"InjectedDependencies(dependencyAccess:_:)","externalID":"s:18GlobalDependencies08InjectedB016dependencyAccess_yAA0E7ControlO_xmxQptcRvzlufm","role":"symbol","modules":[{"name":"GlobalDependencies"}],"symbolKind":"macro","roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"InjectedDependencies","kind":"identifier"},{"kind":"text","text":"<each "},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AccessControl","preciseIdentifier":"s:18GlobalDependencies13AccessControlO","kind":"typeIdentifier"},{"kind":"text","text":", repeat (each "},{"kind":"typeIdentifier","text":"U"},{"text":").Type)","kind":"text"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: named(Dependencies), named(dependencies)) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedDependencies"},{"text":"<each ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dependencyAccess","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AccessControl","preciseIdentifier":"s:18GlobalDependencies13AccessControlO","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl"},{"text":" = .private, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": repeat (each ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"text":").Type)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The macro will declare a ","type":"text"},{"code":"Dependencies","type":"codeVoice"},{"type":"text","text":" type matching the dependencies for all the given protocols and a"},{"text":" ","type":"text"},{"code":"let dependencies: Dependencies","type":"codeVoice"},{"text":" stored property to hold onto them. Its access control can be tweaked if needed but","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if possible it’s best to leave the default "},{"type":"codeVoice","code":"private"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Initialization being individual to each type means the logic for injecting the dependencies will need to be added to","type":"text"},{"text":" ","type":"text"},{"text":"any initializers that the type has manually, usually by adding a final parameter of the form","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"dependencies: Dependencies = GlobalDependencies.default"},{"type":"text","text":"."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"dependencyAccess: Access control for the generated "},{"type":"codeVoice","code":"dependencies"},{"text":" stored property. Defaults to ","type":"text"},{"code":".private","type":"codeVoice"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"being a macro you should always use a constant whenever you use the parameter or the macro won’t be able to generate"},{"type":"text","text":" "},{"type":"text","text":"valid code."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"_: A comma-separated list of dependency protocols. These should be the protocols that have ","type":"text"},{"type":"codeVoice","code":"@Dependency"},{"type":"text","text":" "},{"text":"attached to their declaration, not their generated ","type":"text"},{"type":"codeVoice","code":".Dependency"},{"type":"text","text":" protocols"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)"]}],"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"identifier":{"url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A macro that declares the dependencies of the attached type and sets it up for their injection."}],"seeAlsoSections":[{"generated":true,"title":"Injecting Dependencies into Components","identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection"]}],"references":{"doc://GlobalDependencies/documentation/GlobalDependencies/InjectedDependencies(dependencyAccess:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedDependencies"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dependencyAccess"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:18GlobalDependencies13AccessControlO","text":"AccessControl"},{"kind":"text","text":", repeat (each "},{"text":"U","kind":"typeIdentifier"},{"text":").Type)","kind":"text"}],"abstract":[{"text":"A macro that declares the dependencies of the attached type and sets it up for their injection.","type":"text"}],"kind":"symbol","type":"topic","title":"InjectedDependencies(dependencyAccess:_:)","url":"\/documentation\/globaldependencies\/injecteddependencies(dependencyaccess:_:)","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/InjectedDependencies(dependencyAccess:_:)"},"doc://GlobalDependencies/documentation/GlobalDependencies/AccessControl":{"kind":"symbol","abstract":[{"type":"text","text":"Enumerates Swift access control options as to use as a parameter for a code generating macro."}],"type":"topic","role":"symbol","title":"AccessControl","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccessControl"}],"navigatorTitle":[{"text":"AccessControl","kind":"identifier"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/AccessControl","url":"\/documentation\/globaldependencies\/accesscontrol"},"doc://GlobalDependencies/documentation/GlobalDependencies":{"url":"\/documentation\/globaldependencies","kind":"symbol","role":"collection","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","title":"GlobalDependencies","abstract":[],"type":"topic"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencyInjection":{"kind":"project","title":"Injecting Dependencies","url":"\/tutorials\/globaldependencies\/dependencyinjection","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencyInjection","role":"project","estimatedTime":"10min","abstract":[{"type":"text","text":"Once you have your dependencies set up, you’ll want to inject them into your codebase’s components. The"},{"text":" ","type":"text"},{"text":"GlobalDependencies package makes it straightforward while ensuring your component’s dependencies are well","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"managed and well understood."}],"type":"topic"}}}