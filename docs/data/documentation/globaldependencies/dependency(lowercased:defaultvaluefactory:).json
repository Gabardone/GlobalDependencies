{"metadata":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"lowercased"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":"?, ","kind":"text"},{"text":"defaultValueFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type)","kind":"text"}],"title":"Dependency(lowercased:defaultValueFactory:)","roleHeading":"Macro","externalID":"s:18GlobalDependencies10Dependency10lowercased19defaultValueFactoryys12StaticStringVSg_xmtcAA07DefaultcfG0Rzlufm","role":"symbol","modules":[{"name":"GlobalDependencies"}],"symbolKind":"macro"},"kind":"symbol","abstract":[{"type":"text","text":"A macro that sets up a dependency based on the protocol it is attached to."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(peer, names: suffixed(Dependency), suffixed(DependencyKey)) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: named(Dependency), named(DependencyKey)) "},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"defaultValueFactory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:18GlobalDependencies29DefaultDependencyValueFactoryP","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","text":"DefaultDependencyValueFactory","kind":"typeIdentifier"}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Due to limitations of the Swift macro system (as of Swift 5.9) it is better to have a 1 to 1 correspondence between a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol and a dependency type. This allows the "},{"code":"Dependency","type":"codeVoice"},{"text":" macro to automatically build up most of the auxiliary","type":"text"},{"type":"text","text":" "},{"text":"types needed to manage the protocol as a dependency.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The macro will declare two additional types and also insert them as a ","type":"text"},{"type":"codeVoice","code":"typealias"},{"type":"text","text":" into the attachee protocol. One is a"},{"text":" ","type":"text"},{"type":"text","text":"protocol of the same name as the attachee, postfixed with "},{"code":"Dependency","type":"codeVoice"},{"type":"text","text":" and with a single property that returns an "},{"code":"any Attachee","type":"codeVoice"},{"type":"text","text":". This type will be adopted by "},{"type":"codeVoice","code":"GlobalDependencies"},{"text":" in an extension —usually through usage of the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GlobalDependency"},{"type":"text","text":" macro— and will be how we retrieve this dependency for use in our code."}]},{"type":"paragraph","inlineContent":[{"text":"The other is a key type, adopting ","type":"text"},{"type":"codeVoice","code":"DependencyKey"},{"type":"text","text":", which will be used by "},{"type":"codeVoice","code":"GlobalDependencies"},{"text":" for override management.","type":"text"}]},{"inlineContent":[{"type":"text","text":"If despite all the above a manual dependency declaration is needed you can you can always just check the code generated"},{"type":"text","text":" "},{"text":"by the macro when applied to a random protocol and manually adapt that to your needs.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"lowercased: Optional name of the dependency access property, to be used if it should be different than "},{"type":"codeVoice","code":"name"},{"type":"text","text":" with"},{"type":"text","text":" "},{"text":"its first letter in lowercase.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"defaultValueFactory: A type that adopts ","type":"text"},{"code":"DefaultDependencyValueFactory","type":"codeVoice"},{"text":" and whose ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" associated type adopts","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the protocol that the macro is attached to. The latter constraint can’t be modeled in the macro declaration as of Swift"},{"type":"text","text":" "},{"text":"5.9 but compilation of the generated code will helpfully fail if that’s not the case.","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)"},"seeAlsoSections":[{"title":"Setting up a Dependency","generated":true,"identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey"]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)"]}],"references":{"doc://GlobalDependencies/documentation/GlobalDependencies":{"url":"\/documentation\/globaldependencies","kind":"symbol","role":"collection","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","title":"GlobalDependencies","abstract":[],"type":"topic"},"doc://GlobalDependencies/documentation/GlobalDependencies/GlobalDependency(type:lowercased:)":{"kind":"symbol","url":"\/documentation\/globaldependencies\/globaldependency(type:lowercased:)","abstract":[{"text":"Implements a dependency on the ","type":"text"},{"code":"GlobalDependencies","type":"codeVoice"},{"type":"text","text":" type."}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"GlobalDependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"?)","kind":"text"}],"title":"GlobalDependency(type:lowercased:)","type":"topic","role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:)":{"kind":"symbol","url":"\/documentation\/globaldependencies\/dependency(lowercased:)","abstract":[{"type":"text","text":"Variant of the "},{"code":"Dependency","type":"codeVoice"},{"type":"text","text":" macro that does not take a default value factory type."}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowercased"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"?)","kind":"text"}],"title":"Dependency(lowercased:)","type":"topic","role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/DefaultDependencyValueFactory":{"kind":"symbol","url":"\/documentation\/globaldependencies\/defaultdependencyvaluefactory","abstract":[{"text":"A protocol adopted by types that can build the default value for a dependency.","type":"text"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","navigatorTitle":[{"text":"DefaultDependencyValueFactory","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultDependencyValueFactory","kind":"identifier"}],"title":"DefaultDependencyValueFactory","type":"topic","role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:defaultValueFactory:)":{"kind":"symbol","url":"\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)","abstract":[{"text":"A macro that sets up a dependency based on the protocol it is attached to.","type":"text"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":"?, ","kind":"text"},{"text":"defaultValueFactory","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"title":"Dependency(lowercased:defaultValueFactory:)","type":"topic","role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependencies":{"kind":"symbol","url":"\/documentation\/globaldependencies\/dependencies","abstract":[{"type":"text","text":"Base protocol for vending dependencies for injection."}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","navigatorTitle":[{"text":"Dependencies","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependencies"}],"title":"Dependencies","type":"topic","role":"symbol"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup":{"kind":"project","url":"\/tutorials\/globaldependencies\/dependencysetup","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"code":"GlobalDependencies","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","estimatedTime":"15min","title":"Setting up a Global Dependency","type":"topic","role":"project"},"doc://GlobalDependencies/documentation/GlobalDependencies/DependencyKey":{"abstract":[{"text":"A key for accessing individual dependencies from a ","type":"text"},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" bag."}],"type":"topic","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey","url":"\/documentation\/globaldependencies\/dependencykey","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DependencyKey","kind":"identifier"}],"navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}],"title":"DependencyKey","kind":"symbol"}}}