{"identifier":{"url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(peer, names: suffixed(Dependency), suffixed(DependencyKey)) ","kind":"text"},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(Dependency), named(DependencyKey)) "},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependency"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"? = nil, "},{"text":"defaultValueFactory","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","text":"DefaultDependencyValueFactory","kind":"typeIdentifier","preciseIdentifier":"s:18GlobalDependencies29DefaultDependencyValueFactoryP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Due to limitations of the Swift macro system (as of Swift 5.9) it is better to have a 1 to 1 correspondence between a"},{"text":" ","type":"text"},{"type":"text","text":"protocol and a dependency type. This allows the "},{"type":"codeVoice","code":"Dependency"},{"type":"text","text":" macro to automatically build up most of the auxiliary"},{"type":"text","text":" "},{"type":"text","text":"types needed to manage the protocol as a dependency."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The macro will declare two additional types and also insert them as a "},{"type":"codeVoice","code":"typealias"},{"type":"text","text":" into the attachee protocol. One is a"},{"text":" ","type":"text"},{"type":"text","text":"protocol of the same name as the attachee, postfixed with "},{"type":"codeVoice","code":"Dependency"},{"type":"text","text":" and with a single property that returns an "},{"type":"codeVoice","code":"any Attachee"},{"text":". This type will be adopted by ","type":"text"},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" in an extension —usually through usage of the"},{"text":" ","type":"text"},{"code":"GlobalDependency","type":"codeVoice"},{"type":"text","text":" macro— and will be how we retrieve this dependency for use in our code."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The other is a key type, adopting "},{"type":"codeVoice","code":"DependencyKey"},{"type":"text","text":", which will be used by "},{"type":"codeVoice","code":"GlobalDependencies"},{"text":" for override management.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If despite all the above a manual dependency declaration is needed you can you can always just check the code generated"},{"type":"text","text":" "},{"type":"text","text":"by the macro when applied to a random protocol and manually adapt that to your needs."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"lowercased: Optional name of the dependency access property, to be used if it should be different than ","type":"text"},{"code":"name","type":"codeVoice"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"its first letter in lowercase."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"defaultValueFactory: A type that adopts ","type":"text"},{"type":"codeVoice","code":"DefaultDependencyValueFactory"},{"type":"text","text":" and whose "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" associated type adopts"},{"text":" ","type":"text"},{"text":"the protocol that the macro is attached to. The latter constraint can’t be modeled in the macro declaration as of Swift","type":"text"},{"type":"text","text":" "},{"text":"5.9 but compilation of the generated code will helpfully fail if that’s not the case.","type":"text"}]}]}],"type":"unorderedList"}]}]}]}],"metadata":{"role":"symbol","symbolKind":"macro","roleHeading":"Macro","externalID":"s:18GlobalDependencies10Dependency10lowercased19defaultValueFactoryys12StaticStringVSg_xmtcAA07DefaultcfG0Rzlufm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependency"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"?, "},{"text":"defaultValueFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type)"}],"modules":[{"name":"GlobalDependencies"}],"title":"Dependency(lowercased:defaultValueFactory:)"},"variants":[{"paths":["\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Setting up a Dependency","identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"abstract":[{"text":"A macro that sets up a dependency based on the protocol it is attached to.","type":"text"}],"sections":[],"kind":"symbol","references":{"doc://GlobalDependencies/documentation/GlobalDependencies":{"role":"collection","abstract":[],"type":"topic","url":"\/documentation\/globaldependencies","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","title":"GlobalDependencies","kind":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/DefaultDependencyValueFactory":{"role":"symbol","url":"\/documentation\/globaldependencies\/defaultdependencyvaluefactory","type":"topic","navigatorTitle":[{"text":"DefaultDependencyValueFactory","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","title":"DefaultDependencyValueFactory","abstract":[{"type":"text","text":"A protocol adopted by types that can build the default value for a dependency."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultDependencyValueFactory"}]},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup":{"type":"topic","role":"project","title":"Setting up a Global Dependency","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","abstract":[{"type":"text","text":"This tutorial guides you through a sample set up for a global dependency using the "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" "},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}],"kind":"project","url":"\/tutorials\/globaldependencies\/dependencysetup","estimatedTime":"15min"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:)":{"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","url":"\/documentation\/globaldependencies\/dependency(lowercased:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowercased"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","abstract":[{"text":"Variant of the ","type":"text"},{"type":"codeVoice","code":"Dependency"},{"text":" macro that does not take a default value factory type.","type":"text"}],"role":"symbol","title":"Dependency(lowercased:)"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependencies":{"type":"topic","abstract":[{"type":"text","text":"Base protocol for vending dependencies for injection."}],"url":"\/documentation\/globaldependencies\/dependencies","title":"Dependencies","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Dependencies"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dependencies"}]},"doc://GlobalDependencies/documentation/GlobalDependencies/GlobalDependency(type:lowercased:)":{"role":"symbol","type":"topic","url":"\/documentation\/globaldependencies\/globaldependency(type:lowercased:)","kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)","title":"GlobalDependency(type:lowercased:)","abstract":[{"type":"text","text":"Implements a dependency on the "},{"code":"GlobalDependencies","type":"codeVoice"},{"type":"text","text":" type."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"GlobalDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"lowercased"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":"?)","kind":"text"}]},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:defaultValueFactory:)":{"url":"\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)","kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"defaultValueFactory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type)","kind":"text"}],"title":"Dependency(lowercased:defaultValueFactory:)","abstract":[{"type":"text","text":"A macro that sets up a dependency based on the protocol it is attached to."}],"type":"topic"},"doc://GlobalDependencies/documentation/GlobalDependencies/DependencyKey":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DependencyKey","kind":"identifier"}],"title":"DependencyKey","kind":"symbol","url":"\/documentation\/globaldependencies\/dependencykey","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey","abstract":[{"type":"text","text":"A key for accessing individual dependencies from a "},{"type":"codeVoice","code":"GlobalDependencies"},{"type":"text","text":" bag."}],"navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}]}}}