{"metadata":{"symbolKind":"macro","roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"defaultValueFactory"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type)"}],"modules":[{"name":"GlobalDependencies"}],"title":"Dependency(lowercased:defaultValueFactory:)","role":"symbol","externalID":"s:18GlobalDependencies10Dependency10lowercased19defaultValueFactoryys12StaticStringVSg_xmtcAA07DefaultcfG0Rzlufm"},"abstract":[{"type":"text","text":"A macro that sets up a dependency based on the protocol it is attached to."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies"]]},"kind":"symbol","identifier":{"url":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)"]}],"seeAlsoSections":[{"title":"Setting up a Dependency","generated":true,"identifiers":["doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer, names: suffixed(Dependency), suffixed(DependencyKey)) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: named(Dependency), named(DependencyKey)) "},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"lowercased"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"? = nil, "},{"text":"defaultValueFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"DefaultDependencyValueFactory","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","kind":"typeIdentifier","preciseIdentifier":"s:18GlobalDependencies29DefaultDependencyValueFactoryP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Due to limitations of the Swift macro system (as of Swift 5.9) it is better to have a 1 to 1 correspondence between a"},{"type":"text","text":" "},{"type":"text","text":"protocol and a dependency type. This allows the "},{"type":"codeVoice","code":"Dependency"},{"text":" macro to automatically build up most of the auxiliary","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"types needed to manage the protocol as a dependency."}]},{"inlineContent":[{"type":"text","text":"The macro will declare two additional types and also insert them as a "},{"type":"codeVoice","code":"typealias"},{"type":"text","text":" into the attachee protocol. One is a"},{"type":"text","text":" "},{"type":"text","text":"protocol of the same name as the attachee, postfixed with "},{"type":"codeVoice","code":"Dependency"},{"text":" and with a single property that returns an ","type":"text"},{"code":"any Attachee","type":"codeVoice"},{"type":"text","text":". This type will be adopted by "},{"code":"GlobalDependencies","type":"codeVoice"},{"type":"text","text":" in an extension —usually through usage of the"},{"type":"text","text":" "},{"code":"GlobalDependency","type":"codeVoice"},{"type":"text","text":" macro— and will be how we retrieve this dependency for use in our code."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The other is a key type, adopting "},{"code":"DependencyKey","type":"codeVoice"},{"text":", which will be used by ","type":"text"},{"code":"GlobalDependencies","type":"codeVoice"},{"text":" for override management.","type":"text"}]},{"inlineContent":[{"type":"text","text":"If despite all the above a manual dependency declaration is needed you can you can always just check the code generated"},{"text":" ","type":"text"},{"type":"text","text":"by the macro when applied to a random protocol and manually adapt that to your needs."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"lowercased: Optional name of the dependency access property, to be used if it should be different than "},{"type":"codeVoice","code":"name"},{"text":" with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its first letter in lowercase."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"defaultValueFactory: A type that adopts ","type":"text"},{"type":"codeVoice","code":"DefaultDependencyValueFactory"},{"text":" and whose ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" associated type adopts"},{"text":" ","type":"text"},{"type":"text","text":"the protocol that the macro is attached to. The latter constraint can’t be modeled in the macro declaration as of Swift"},{"text":" ","type":"text"},{"text":"5.9 but compilation of the generated code will helpfully fail if that’s not the case.","type":"text"}]}]}]}]}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://GlobalDependencies/documentation/GlobalDependencies/DefaultDependencyValueFactory":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DefaultDependencyValueFactory","abstract":[{"type":"text","text":"A protocol adopted by types that can build the default value for a dependency."}],"url":"\/documentation\/globaldependencies\/defaultdependencyvaluefactory","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultDependencyValueFactory"}],"navigatorTitle":[{"kind":"identifier","text":"DefaultDependencyValueFactory"}],"title":"DefaultDependencyValueFactory","type":"topic"},"doc://GlobalDependencies/documentation/GlobalDependencies/GlobalDependency(type:lowercased:)":{"title":"GlobalDependency(type:lowercased:)","abstract":[{"type":"text","text":"Implements a dependency on the "},{"code":"GlobalDependencies","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"topic","url":"\/documentation\/globaldependencies\/globaldependency(type:lowercased:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalDependency","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"lowercased"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/GlobalDependency(type:lowercased:)"},"doc://GlobalDependencies/tutorials/GlobalDependencies/DependencySetup":{"role":"project","type":"topic","url":"\/tutorials\/globaldependencies\/dependencysetup","identifier":"doc:\/\/GlobalDependencies\/tutorials\/GlobalDependencies\/DependencySetup","title":"Setting up a Global Dependency","estimatedTime":"15min","kind":"project","abstract":[{"text":"This tutorial guides you through a sample set up for a global dependency using the ","type":"text"},{"code":"GlobalDependencies","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"package. You’ll set up all the parts needed for a dependency to be usable, injectable and overridable."}]},"doc://GlobalDependencies/documentation/GlobalDependencies":{"kind":"symbol","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies","type":"topic","role":"collection","abstract":[],"title":"GlobalDependencies","url":"\/documentation\/globaldependencies"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependencies":{"kind":"symbol","title":"Dependencies","type":"topic","role":"symbol","url":"\/documentation\/globaldependencies\/dependencies","navigatorTitle":[{"text":"Dependencies","kind":"identifier"}],"abstract":[{"type":"text","text":"Base protocol for vending dependencies for injection."}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependencies","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependencies"}]},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:)":{"role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependency"},{"kind":"text","text":"("},{"text":"lowercased","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:)","url":"\/documentation\/globaldependencies\/dependency(lowercased:)","title":"Dependency(lowercased:)","kind":"symbol","abstract":[{"type":"text","text":"Variant of the "},{"type":"codeVoice","code":"Dependency"},{"text":" macro that does not take a default value factory type.","type":"text"}]},"doc://GlobalDependencies/documentation/GlobalDependencies/DependencyKey":{"url":"\/documentation\/globaldependencies\/dependencykey","title":"DependencyKey","navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DependencyKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing individual dependencies from a ","type":"text"},{"code":"GlobalDependencies","type":"codeVoice"},{"text":" bag.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/DependencyKey","role":"symbol"},"doc://GlobalDependencies/documentation/GlobalDependencies/Dependency(lowercased:defaultValueFactory:)":{"url":"\/documentation\/globaldependencies\/dependency(lowercased:defaultvaluefactory:)","title":"Dependency(lowercased:defaultValueFactory:)","identifier":"doc:\/\/GlobalDependencies\/documentation\/GlobalDependencies\/Dependency(lowercased:defaultValueFactory:)","abstract":[{"text":"A macro that sets up a dependency based on the protocol it is attached to.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"lowercased","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"?, "},{"text":"defaultValueFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"kind":"symbol"}}}